ctrl_net_ids = [5136, 3002, 2104, 872, 2446, 1947, 3245, 599, 1451, 594, 578, 1681, 1770, 6217, 1425, 1185, 2144, 2997, 2648, 809, 1179, 395, 806, 805, 6095, 175, 5598, 5602, 6559, 1481, 417, 3555, 6085, 267, 2993, 2636, 566, 122, 3236, 1915, 5699, 2525, 461, 1208, 99, 286, 1187, 633, 4768, 1133, 6475, 7388, 4991, 3135, 2782, 171, 7710, 1300, 3311, 2709, 1945, 1796, 2108, 1396, 1788, 3277, 1092, 441, 3310, 1577, 1570, 6788, 6540, 6749, 4436, 1417, 1925, 3265, 5266, 2533, 7427, 7249, 165, 676, 91, 445, 2165, 936, 7435, 719, 1989, 4773, 62, 1555, 318, 750, 2684, 588, 7215, 2125, 324, 5214, 2628, 4932, 682, 21, 7494, 300, 1547, 154, 2379, 756, 565, 3286, 382, 3090, 6041, 2992, 2988, 1277, 630, 3569, 2632, 399, 3162, 880, 760, 667, 5509, 155, 1835, 156, 4090, 4408, 5701, 6204, 431, 198, 963, 2294, 1768, 2141, 3447, 1913, 5212, 6080, 928, 323, 2186, 2199, 3510, 2115, 6379, 2113, 2148, 5294, 803, 2680, 1777, 2750, 3003, 54, 1652, 210, 1204, 325, 5197, 4039, 224, 5944, 1897, 2891, 7322, 4470, 218, 915, 6161, 632, 7429, 4188, 2042, 2854, 7298, 394, 5764, 5260, 2718, 201, 3551, 3129, 5249, 95, 3176, 2280, 1383, 1125, 4461, 6584, 3520, 2137, 4613, 2007, 1419, 4104, 1444, 4010, 376, 185, 609, 2944, 6227, 1261, 1158, 7424, 4582, 2535, 6266, 321, 3001, 4584, 2911, 4541, 6678, 1063, 428, 3167, 1427, 7444, 4578, 922, 1376, 3219, 1176, 3672, 4658, 1424, 758, 6086, 2994, 7164, 3466, 379, 6334, 5012, 390, 1244, 835, 6211, 3188, 3635, 1528, 947, 4670, 413, 6541, 1951, 3161, 1745, 6243, 6835, 2996, 3798, 3925, 1472, 1288, 37, 5061, 5346, 1605, 1177, 1391, 5031, 1843, 354, 3768, 4109, 6535, 1674, 3471, 5193, 2219, 7583, 3651, 4301, 7722, 2191, 2874, 1108, 610, 3215, 6668, 1522, 7202, 2136, 2203, 1718, 665, 3581, 2212, 829, 4093, 42, 5940, 1619, 3518, 2641, 3170, 1676, 4307, 2041, 1882, 3255, 6762, 813, 6037, 335, 5929, 1723, 485, 6098, 2278, 753, 5624, 4417, 3249, 3828, 133, 1559, 4003, 7625, 1210, 212, 2575, 3339, 5115, 2877, 1189, 4195, 2463, 7604, 7377, 1371, 7475, 3862, 2213, 3159, 1959, 3807, 1387, 6600, 142, 3470, 726, 1469, 472, 648, 1648, 2751, 490, 5103, 3498, 6143, 3340, 2564, 3799, 975, 2892, 353, 3427, 3367, 4888, 1242, 1851, 2915, 4715, 3708, 2612, 4667, 1219, 2995, 444, 1975, 1283, 2287, 2909, 7276, 1293, 1865, 7301, 1086, 4964, 7731, 3091, 5914, 841, 2990, 5775, 5122, 6087, 1821, 2634, 1750, 3528, 1377, 4741, 484, 5536, 5686, 7311, 5461, 55, 7398, 3806, 282, 4472, 1409, 2872, 5907, 4235, 3235, 6755, 1316, 1442, 7027, 5420, 643, 1731, 6752, 584, 250, 6415, 6003, 3995, 2656, 1268, 5001, 200, 4545, 2731, 1779, 2676, 1022, 3586, 3521, 2461, 4035, 6180, 193, 2352, 4203, 5876, 1093, 4818, 6369, 1049, 2652, 1688, 2745, 6053, 2933, 3329, 1941, 1888, 7078, 4913, 3527, 2706, 5300, 2307, 1943, 1890, 1078, 623, 1838, 3194, 6189, 1436, 698, 1438, 2249, 1586, 3533, 1312, 3903, 6921, 6250, 1847, 3676, 1488, 4375, 1007, 6834, 4710, 1346, 2142, 1685, 845, 2350, 6044, 2955, 74, 1326, 5824, 5081, 488, 6197, 5682, 3224, 953, 1320, 3073, 4281, 1146, 2720, 5109, 5500, 1756, 1675, 3505, 825, 2888, 4391, 6280, 1421, 7700, 2414, 2613, 3997, 197, 2395, 4750, 766, 6366, 2399, 1256, 1910, 2946, 3232, 4581, 807, 832, 4734, 5002, 1762, 5293, 2986, 2004, 875, 439, 5250, 541, 5955, 5777, 1710, 4407, 1591, 6819, 4515, 3252, 1735, 899, 7394, 4737, 3484, 3242, 889, 110, 7137, 2683, 3619, 2267, 7247, 7127, 4561, 978, 438, 882, 3036, 6614, 216, 993, 2340, 3268, 3685, 6176, 4751, 2114, 7402, 7569, 6564, 1787, 3366, 7220, 2710, 263, 5133, 4138, 4214, 1958, 4123, 5827, 7180, 3464, 1909, 1091, 1747, 804, 3987, 2380, 7535, 1339, 213, 585, 4603, 4280, 3440, 2244, 1076, 2410, 5032, 3896, 1095, 7723, 1823, 295, 48, 88, 4055, 283, 2277, 7519, 7729, 2690, 474, 1400, 2631, 1209, 2044, 6917, 2230, 3972, 867, 3331, 4973, 3763, 4955, 3713, 3244, 3288, 5912, 1726, 287, 2633, 3461, 1940, 567, 589, 1107, 1744, 5211, 196, 694, 3513, 3655, 3083, 278, 2268, 4130, 671, 2822, 6370, 3459, 5562, 97, 3208, 4156, 1344, 3803, 5067, 2914, 408, 5499, 7059, 1746, 1090, 322, 1357, 5599, 2185, 787, 2945, 5675, 268, 1275, 2259, 261, 4995, 340, 4462, 186, 7737, 1503, 4836, 669, 6267, 6247, 4922, 1233, 3190, 7329, 2195, 178, 7474, 6991, 5398, 6441, 2688, 4302, 3490, 1795, 4139, 3272, 1232, 3905, 4376, 1789, 5576, 2804, 5358, 6568, 3389, 3901, 3733, 7363, 853, 447, 3328, 1106, 2987, 4639, 7662, 4730, 6641, 666, 5873, 781, 420, 1887, 3293, 5044, 4321, 3211, 1373, 4729, 7549, 3195, 4204, 2012, 4498, 5463, 4509, 6893, 5315, 1971, 6114, 1392, 5033, 7706, 1886, 1827, 2404, 7593, 801, 45, 476, 799, 2222, 1101, 3842, 4576, 4028, 4027, 2812, 3270, 547, 3757, 7551, 3599, 3048, 1880, 5806, 6451, 4398, 1051, 2281, 1720, 6021, 1094, 4120, 1036, 1162, 4292, 5281, 4731, 172, 5090, 1754, 136, 3143, 2939, 4040, 4753, 1930, 2156, 5595, 2014, 1699, 7718, 4549, 6721, 181, 1783, 1786, 1610, 3500, 2506, 5875, 2139, 2881, 2869, 3509, 5046, 2677, 4471, 3372, 1776, 6028, 2484, 1578, 6802, 2327, 6446, 3204, 6793, 1282, 1301, 2908, 1035, 6177, 7161, 5538, 5154, 1112, 1729, 6193, 132, 1575, 5248, 797, 113, 4592, 931, 7280, 166, 6491, 1269, 1128, 2504, 744, 371, 2197, 1002, 746, 93, 729, 207, 4800, 3351, 6116, 78, 3256, 1414, 452, 2599, 1733, 92, 687, 4279, 2651, 1311, 7605, 961, 5209, 6864, 230, 157, 3813, 3872, 2360, 1740, 4320, 6727, 1527, 3322, 2559, 4361, 1426, 6103, 298, 246, 5987, 1876, 6466, 401, 2902, 1878, 2348, 1303, 3795, 7726, 4684, 834, 4717, 2276, 1558, 3116, 1584, 460, 625, 6337, 5246, 1502, 5717, 2343, 3283, 3327, 600, 976, 680, 4256, 3525, 1354, 2937, 2491, 3185, 523, 3531, 3515, 3480, 338, 774, 2040, 2261, 4294, 1884, 3053, 177, 2887, 2732, 4153, 1309, 262, 2043, 4553, 1543, 5703, 5486, 7570, 2906, 3353, 4304, 3388, 5152, 2347, 2490, 1329, 3160, 3012, 498, 388, 1353, 660, 5774, 308, 5867, 2687, 693, 5502, 1046, 6856, 3433, 7476, 120, 3094, 1949, 4608, 851, 4167, 3417, 1274, 195, 7289, 5132, 5639, 2746, 1700, 3109, 499, 715, 1318, 4077, 1755, 1955, 555, 6458, 3394, 2009, 2184, 4605, 1042, 563, 1307, 341, 3192, 2192, 2814, 4672, 1322, 429, 2855, 2984, 4395, 7546, 2643, 7616, 1848, 742, 4254, 2806, 1402, 2216, 2090, 1197, 4043, 5748, 1399, 1659, 1194, 440, 6011, 7673, 4640, 4257, 2784, 1867, 7691, 4221, 4129, 997, 731, 489, 2916, 1072, 1239, 987, 4111, 620, 3344, 3005, 1854, 1248, 2080, 391, 7725, 2485, 3172, 1097, 1351, 1757, 5051, 968, 1083, 5629, 1255, 3011, 1682, 972, 1183, 280, 5542, 3182, 1068, 1420, 985, 1105, 1273, 631, 3320, 1145, 159, 1434, 1085, 1267, 1964, 4633, 757, 5157, 7286, 2459, 3119, 312, 1800, 2029, 5474, 1883, 4460, 4309, 793, 419, 34, 788, 2859, 914, 2442, 2810, 970, 1034, 405, 4084, 877, 7044, 2813, 1635, 3965, 5925, 5277, 2607, 265, 229, 551, 3416, 378, 5773, 2486, 7511, 5126, 2140, 2589, 3502, 1009, 1157, 1325, 5082, 2409, 6995, 5130, 3010, 824, 3825, 502, 1978, 3992, 1645, 2901, 1546, 2455, 2728, 2943, 4792, 1411, 708, 316, 3007, 274, 3284, 2567, 1029, 4893, 2565, 789, 141, 1037, 1289, 984, 2727, 2528, 1333, 1064, 1205, 1408, 798, 6163, 1199, 2265, 3287, 6558, 350, 2221, 2570, 933, 1641, 276, 596, 4538, 3009, 2429, 1207, 2759, 4250, 5038, 748, 1636, 407, 1655, 3843, 1548, 5299, 2447, 6500, 1059, 919, 493, 4919, 2150, 151, 3165, 2886, 3151, 7634, 3319, 2753, 4423, 2106, 128, 1737, 3175, 1385, 2487, 817, 2693, 443, 3801, 2913, 2917, 2194, 2387, 2578, 2849, 2787, 3140, 1321, 718, 3675, 6339, 5902, 1131, 7575, 311, 3246, 389, 1243, 4094, 1211, 1331, 1782, 5444, 5021, 3330, 1611, 4735, 7060, 1585, 7186, 7420, 7741, 5891, 553, 7440, 1712, 2353, 4754, 3491, 906, 863, 1457, 4686, 7343, 106, 1047, 2847, 5882, 1979, 225, 6070, 650, 2464, 695, 7506, 3108, 945, 346, 2650, 1879, 2349, 393, 1560, 3052, 1456, 1298, 2529, 4691, 833, 4211, 281, 1824, 542, 1201, 828, 107, 173, 5256, 1660, 7093, 3260, 3039, 1138, 314, 2168, 6966, 1678, 924, 1070, 2440, 1332, 1120, 2918, 2851, 734, 819, 2304, 1394, 1738, 2107, 2176, 153, 2448, 6625, 1938, 409, 3173, 5636, 2531, 2572, 2264, 329, 802, 4782, 5427, 1285, 435, 977, 6462, 94]

ctrl_nets = list()

for id in ctrl_net_ids:
    ctrl_nets.append(netlist.get_net_by_id(id))

# First dsp38
#t_start = 12353277697
#t_stop  = 12353279361

# whole 2 iteration (around 7 or 8)
#t_start = 12354146105
#t_stop = 12354407105

# whole 5 iteration (around 7 or 8)
t_start = 12354146105
t_stop = 12354907097

time_steps = list()

json_path = "/home/simon/data/iphone/simulation_2022_05_13/known_ctrl_nets_{}_{}.json".format(t_start, t_stop)

clk_id = 4254
clk_net = netlist.get_net_by_id(clk_id)

waveform = ctrl_sim.get_waveform_by_net(clk_net) 
t0 = t_start                                   # start time for requested event data buffer (list of tuples)
while (events := waveform.get_events(t0)):   # as long as there are events ...
    t0 = events[-1][0] + 1                   # next start time := maxtime + 1
    for tuple in events:                     # dump events in console
        if tuple[1] == 1:
            time_steps.append(tuple[0])

            if tuple[0] > t_stop:
                break

    if t0 > t_stop:
        break

print(len(time_steps))
print(time_steps)

ctrl_events = dict()

for t in time_steps:
    ctrl_events[t] = dict()

for ctrl_net in ctrl_nets:
    ctrl_waveform = ctrl_sim.get_waveform_by_net(ctrl_net)

    for t_index in range(len(time_steps)):
        t = time_steps[t_index]
        if ctrl_net.id == clk_net.id:
            ctrl_val = ctrl_waveform.get_value_at(t)
        else:
            ctrl_val = ctrl_waveform.get_value_at(t-1)
        ctrl_events[t][ctrl_net.id] = ctrl_val
        
        #print("Got {} at {} / {} for {}".format(ctrl_val, t-1, t_index, ctrl_net.id))
        
        if ctrl_val not in [0, 1]:
            print("ERROR, got value {} at {} for {}!".format(ctrl_val, t, ctrl_net.id))
            break


import json
with open(json_path, 'w') as f:
    json.dump(ctrl_events, f, indent=4)

ctr_json_path = "/home/simon/data/iphone/simulation_2022_05_13/counter_values_{}_{}.json".format(t_start, t_stop)

ctr_events = dict()
for t in time_steps:
    ctr_events[t] = dict()

ctr_to_net_ids = {
    "DSP36": [3987, 6893, 4028, 3825, 4973, 4922],
    "DSP37": [4398, 499, 6991, 417, 6559],
    "DSP38": [3182, 2813, 748, 5629, 62],
    "DSP39": [2881, 2987, 2984, 5277, 7726, 5682],
}

dsp38_remapping = [0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 17, 16, 19, 18, 1]

for ctr_name in ctr_to_net_ids:
    print("Getting values for {}".format(ctr_name))
    
    ctr_net_ids = ctr_to_net_ids[ctr_name]
    counter_nets = list()
    for i in ctr_net_ids:
        counter_nets.append(netlist.get_net_by_id(i))
    ctr_wf_id = ctrl_sim.add_waveform_group(ctr_name, counter_nets)
    ctr_wf = ctrl_sim.get_waveform_group_by_id(ctr_wf_id)
    
    for t_index in range(len(time_steps)):
        t = time_steps[t_index]

        ctr_val = ctr_wf.get_value_at(t-1)
        
        if ctr_name == "DSP38":
            ctr_val = dsp38_remapping.index(ctr_val)
    
        ctr_events[t][ctr_name] = ctr_val
                
        if ctr_val < 0:
            print("ERROR, got value {} at {} for {}!".format(ctr_val, t, ctr_name))
            break
    
with open(ctr_json_path, 'w') as f:
    json.dump(ctr_events, f, indent=4)